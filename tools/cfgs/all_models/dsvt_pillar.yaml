TYPE : 'ALL'

CLASS_NAMES: "KITTI"

CLASS_NAMES_KITTI: ['Car', 'Pedestrian', 'Cyclist']
CLASS_NAMES_WAYMO: ['Vehicle', 'Pedestrian', 'Cyclist']
CLASS_NAMES_NUSCENES: ['car', 'pedestrian', 'cyclist']
CLASS_NAMES_NIA : ['Vehicle', 'Human', 'Cyclist']
CLASS_NAMES_ARGO2 : ['Regular_vehicle', 'Pedestrian', 'Bicyclist']
CLASS_NAMES_ONCE : ['Car', 'Pedestrian', 'Bicyclist']
CLASS_NAMES_LYFT : ['car', 'pedestrian', 'Cyclist']

DATA_CONFIG:
    _BASE_CONFIG_: cfgs/all_models/dataset_dsvt_pillar.yaml

MODEL:
    NAME: CenterPoint

    VFE:
        NAME: DynamicVoxelVFE
        WITH_DISTANCE: False
        USE_ABSLOTE_XYZ: True
        USE_NORM: True
        NUM_FILTERS: [ 192, 192 ]

    BACKBONE_3D:
        # NAME: DSVT
        # INPUT_LAYER:
        #     sparse_shape: [468, 468, 1]
        #     downsample_stride: []
        #     d_model: [192]
        #     set_info: [[36, 4]]
        #     window_shape: [[12, 12, 1]]
        #     hybrid_factor: [2, 2, 1] # x, y, z
        #     shifts_list: [[[0, 0, 0], [6, 6, 0]]]
        #     normalize_pos: False

        # block_name: ['DSVTBlock']
        # set_info: [[36, 4]]
        # d_model: [192]
        # nhead: [12]
        # dim_feedforward: [384]
        # dropout: 0.3
        # activation: gelu
        # output_shape: [468, 468]
        # conv_out_channel: 384
        # # 192
        # # You can enable torch.utils.checkpoint to save GPU memory
        # USE_CHECKPOINT: True
        NAME: DSVT
        INPUT_LAYER:
            sparse_shape: [468, 468, 1]
            downsample_stride: []
            d_model: [192]
            set_info: [[36, 4]]
            window_shape: [[12, 12, 1]]
            hybrid_factor: [2, 2, 1] # x, y, z
            shifts_list: [[[0, 0, 0], [6, 6, 0]]]
            normalize_pos: False

        block_name: ['DSVTBlock']
        set_info: [[36, 4]]
        d_model: [192]
        nhead: [8]
        dim_feedforward: [384]
        dropout: 0.2
        activation: gelu
        output_shape: [468, 468]
        conv_out_channel: 192
        # You can enable torch.utils.checkpoint to save GPU memory
        USE_CHECKPOINT: False

    MAP_TO_BEV:
        NAME: PointPillarScatter3d
        INPUT_SHAPE: [468, 468, 1]
        NUM_BEV_FEATURES: 192

    BACKBONE_2D:
        NAME: BaseBEVResBackbone
        LAYER_NUMS: [ 1, 2, 2 ]
        LAYER_STRIDES: [ 1, 2, 2 ]
        NUM_FILTERS: [ 128, 128, 256 ]
        UPSAMPLE_STRIDES: [ 1, 2, 4 ]
        NUM_UPSAMPLE_FILTERS: [ 128, 128, 128 ]

    DENSE_HEAD:
        NAME: CenterHead
        CLASS_AGNOSTIC: False

        CLASS_NAMES_EACH_HEAD: [
            ['Car', 'Pedestrian', 'Cyclist']
        ]

        SHARED_CONV_CHANNEL: 64
        USE_BIAS_BEFORE_NORM: False
        NUM_HM_CONV: 2

        BN_EPS: 0.001
        BN_MOM: 0.01
        SEPARATE_HEAD_CFG:
            HEAD_ORDER: ['center', 'center_z', 'dim', 'rot']
            HEAD_DICT: {
              'center': {'out_channels': 2, 'num_conv': 2},
              'center_z': {'out_channels': 1, 'num_conv': 2},
              'dim': {'out_channels': 3, 'num_conv': 2},
              'rot': {'out_channels': 2, 'num_conv': 2},
              'iou': {'out_channels': 1, 'num_conv': 2},
            }

        TARGET_ASSIGNER_CONFIG:
            FEATURE_MAP_STRIDE: 1
            NUM_MAX_OBJS: 500
            GAUSSIAN_OVERLAP: 0.1
            MIN_RADIUS: 2

        IOU_REG_LOSS: True

        LOSS_CONFIG:
            LOSS_WEIGHTS: {
                'cls_weight': 1.0,
                'loc_weight': 2.0,
                'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
            }

        POST_PROCESSING:
            SCORE_THRESH: 0.1
            POST_CENTER_LIMIT_RANGE: [-80, -80, -10.0, 80, 80, 10.0]
            MAX_OBJ_PER_SAMPLE: 500
            USE_IOU_TO_RECTIFY_SCORE: True
            IOU_RECTIFIER: [0.68, 0.71, 0.65]

            NMS_CONFIG:
                NMS_TYPE: class_specific_nms
                NMS_THRESH: [0.75, 0.6, 0.55]
                NMS_PRE_MAXSIZE: [4096, 4096, 4096]
                NMS_POST_MAXSIZE: [500, 500, 500]
# torch.utils.checkpoint는 모든 모델에 효과적인 것은 아닙니다. 모델의 구조와 계산 패턴에 따라 효과가 다를 수 있습니다.
# 체크포인트를 사용하면 모델 학습 속도가 향상될 수 있지만, 모델 정확도가 약간 감소할 수 있습니다.
# torch.utils.checkpoint는 GPU에서만 사용할 수 있습니다.
    # DENSE_HEAD:
    #     NAME: AnchorHeadSingle
    #     CLASS_AGNOSTIC: False

    #     USE_DIRECTION_CLASSIFIER: True
    #     DIR_OFFSET: 0.78539
    #     DIR_LIMIT_OFFSET: 0.0
    #     NUM_DIR_BINS: 2

    #     ANCHOR_GENERATOR_CONFIG: [

    #         {
    #             'class_name': 'Car',
    #             'anchor_sizes': [[3.9, 1.6, 1.56]],
    #             'anchor_rotations': [0, 1.57],
    #             'anchor_bottom_heights': [-1.78],
    #             'align_center': False,
    #             'feature_map_stride': 8,
    #             'matched_threshold': 0.6,
    #             'unmatched_threshold': 0.45
    #         },
    #         {
    #             'class_name': 'Pedestrian',
    #             'anchor_sizes': [[0.8, 0.6, 1.73]],
    #             'anchor_rotations': [0, 1.57],
    #             'anchor_bottom_heights': [-0.6],
    #             'align_center': False,
    #             'feature_map_stride': 8,
    #             'matched_threshold': 0.5,
    #             'unmatched_threshold': 0.35
    #         },
    #         {
    #             'class_name': 'Cyclist',
    #             'anchor_sizes': [[1.76, 0.6, 1.73]],
    #             'anchor_rotations': [0, 1.57],
    #             'anchor_bottom_heights': [-0.6],
    #             'align_center': False,
    #             'feature_map_stride': 8,
    #             'matched_threshold': 0.5,
    #             'unmatched_threshold': 0.35
    #         }
    #     ]

        # TARGET_ASSIGNER_CONFIG:
        #     NAME: AxisAlignedTargetAssigner
        #     POS_FRACTION: -1.0
        #     SAMPLE_SIZE: 512
        #     NORM_BY_NUM_EXAMPLES: False
        #     MATCH_HEIGHT: False
        #     BOX_CODER: ResidualCoder

        # LOSS_CONFIG:
        #     LOSS_WEIGHTS: {
        #         'cls_weight': 1.0,
        #         'loc_weight': 2.0,
        #         'dir_weight': 0.2,
        #         'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        #     }

    POST_PROCESSING:
        RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
        EVAL_METRIC: waymo


OPTIMIZATION:
    BATCH_SIZE_PER_GPU: 1
    NUM_EPOCHS: 24

    OPTIMIZER: adam_onecycle
    LR: 0.003 #
    WEIGHT_DECAY: 0.05
    MOMENTUM: 0.9

    MOMS: [0.95, 0.85]
    PCT_START: 0.1
    DIV_FACTOR: 100
    DECAY_STEP_LIST: [35, 45]
    LR_DECAY: 0.1
    LR_CLIP: 0.0000001

    LR_WARMUP: False
    WARMUP_EPOCH: 1

    GRAD_NORM_CLIP: 10
    LOSS_SCALE_FP16: 32.0

HOOK:
    DisableAugmentationHook:
        DISABLE_AUG_LIST: ['gt_sampling','random_world_flip','random_world_rotation','random_world_scaling', 'random_world_translation']
        NUM_LAST_EPOCHS: 1